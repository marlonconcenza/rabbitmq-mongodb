version: '3.4'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
        - 27017:27017
    environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=123456
    networks: 
        - backend
    volumes:
      - mongodb.data:/var/lib/mongodb
  rabbitmq:
    container_name: rabbitmq
    platform: linux/arm64/v8
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq.data:/var/lib/rabbitmq
    ports:
      - 5671:5671
      - 5672:5672
      - 15672:15672
    networks:
      - backend
  api:
    image: ${DOCKER_REGISTRY-}api
    container_name: api
    build:
      context: .
      dockerfile: API/Dockerfile
    ports:
        - 5001:80
    environment:
        - Rabbitmq_Host=rabbitmq
        - Rabbitmq_Queue=users
        - MongoUser=admin
        - MongoPassword=123456
        - MongoServer=mongodb
        - MongoPort=27017
        - MongoDataBaseDefault=admin
        - MongoDataBase=mydb
    networks:
      - backend
    depends_on:
      - mongodb
      - rabbitmq
  consumer:
    image: ${DOCKER_REGISTRY-}consumer
    container_name: consumer
    build:
      context: .
      dockerfile: Consumer/Dockerfile
    environment:
        - Rabbitmq_Host=rabbitmq
        - Rabbitmq_Queue=users
        - MongoUser=admin
        - MongoPassword=123456
        - MongoServer=mongodb
        - MongoPort=27017
        - MongoDataBaseDefault=admin
        - MongoDataBase=mydb
    networks:
      - backend
    depends_on:
      - mongodb
      - rabbitmq
    restart: always
networks:
  backend:
    driver: bridge
volumes:
  rabbitmq.data:
  mongodb.data:

